---
- name: Load OS-specific vars.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_distribution}}.yml'
        - '{{ansible_os_family}}.yml'
        - main.yml
      paths:
        - 'vars'

# I don't think this can be avoided by dropping a file, needs to be in the rpm database
- name: Add Docker GPG key.
  rpm_key:
    key: "{{ docker_yum_gpg_key }}"
    state: present
  when:
    - ansible_os_family == 'RedHat'
    - docker_add_repo | bool

- name: Configure Redhat based system packages
  lod.filedrop.filedrop:
    src: redhat
  when: ansible_os_family == 'RedHat'

- name: Configure Debian based system packages
  lod.filedrop.filedrop:
    src: debian
  when: ansible_os_family == 'Debian'


- name: Ensure old versions of Docker are not installed.
  package:
    name: "{{ docker_obsolete_packages }}"
    state: absent


- name: Install Docker packages.
  package:
    name: "{{ docker_packages + additional_packages }}"
    state: "{{ docker_packages_state }}"
    allow_downgrade: "{{ True if allow_downgrade else omit }}"
    update_cache: true
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  vars:
    additional_packages: "{{ [docker_compose_package] if docker_install_compose_plugin else [] }}"
    allow_downgrade: "{{ ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian'] }}"

- name: Configure docker
  lod.filedrop.filedrop:

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: docker_service_manage | bool

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- name: Ensure users are members of the docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"
  notify: reset ssh connection
